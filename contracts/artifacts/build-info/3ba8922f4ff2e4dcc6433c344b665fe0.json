{
	"id": "3ba8922f4ff2e4dcc6433c344b665fe0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StructAndMapping.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @author 0xVeliUysal\n * @dev Array Example\n */\ncontract StructAndMapping {\n\n    struct Allowance {\n        address spender;\n        uint256 amount;\n    }\n\n    mapping(address => Allowance) private allowances;\n\n    constructor() payable {\n        require(msg.value > 0);\n    }\n\n    function setAllowanceWithAddress(address _spender, uint256 _amount) public {\n        Allowance memory allowance;\n        allowance.spender = _spender;\n        allowance.amount = _amount;\n        allowances[msg.sender] = allowance;\n    }\n\n    function getAllowance(address owner) public view returns(Allowance memory allowance) {\n        return allowances[owner];\n    }\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/StructAndMapping.sol": {
				"StructAndMapping": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "getAllowance",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct StructAndMapping.Allowance",
									"name": "allowance",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setAllowanceWithAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "0xVeliUysal",
						"details": "Array Example",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StructAndMapping.sol\":126:732  contract StructAndMapping {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StructAndMapping.sol\":345:346  0 */\n  0x00\n    /* \"contracts/StructAndMapping.sol\":333:342  msg.value */\n  callvalue\n    /* \"contracts/StructAndMapping.sol\":333:346  msg.value > 0 */\n  gt\n    /* \"contracts/StructAndMapping.sol\":325:347  require(msg.value > 0) */\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n    /* \"contracts/StructAndMapping.sol\":126:732  contract StructAndMapping {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StructAndMapping.sol\":126:732  contract StructAndMapping {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc441b931\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xeb5a662e\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StructAndMapping.sol\":360:596  function setAllowanceWithAddress(address _spender, uint256 _amount) public {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/StructAndMapping.sol\":602:728  function getAllowance(address owner) public view returns(Allowance memory allowance) {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StructAndMapping.sol\":360:596  function setAllowanceWithAddress(address _spender, uint256 _amount) public {... */\n    tag_8:\n        /* \"contracts/StructAndMapping.sol\":445:471  Allowance memory allowance */\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"contracts/StructAndMapping.sol\":501:509  _spender */\n      dup3\n        /* \"contracts/StructAndMapping.sol\":481:490  allowance */\n      dup2\n        /* \"contracts/StructAndMapping.sol\":481:498  allowance.spender */\n      0x00\n      add\n        /* \"contracts/StructAndMapping.sol\":481:509  allowance.spender = _spender */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/StructAndMapping.sol\":538:545  _amount */\n      dup2\n        /* \"contracts/StructAndMapping.sol\":519:528  allowance */\n      dup2\n        /* \"contracts/StructAndMapping.sol\":519:535  allowance.amount */\n      0x20\n      add\n        /* \"contracts/StructAndMapping.sol\":519:545  allowance.amount = _amount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/StructAndMapping.sol\":580:589  allowance */\n      dup1\n        /* \"contracts/StructAndMapping.sol\":555:565  allowances */\n      0x00\n        /* \"contracts/StructAndMapping.sol\":555:577  allowances[msg.sender] */\n      dup1\n        /* \"contracts/StructAndMapping.sol\":566:576  msg.sender */\n      caller\n        /* \"contracts/StructAndMapping.sol\":555:577  allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StructAndMapping.sol\":555:589  allowances[msg.sender] = allowance */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/StructAndMapping.sol\":435:596  {... */\n      pop\n        /* \"contracts/StructAndMapping.sol\":360:596  function setAllowanceWithAddress(address _spender, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StructAndMapping.sol\":602:728  function getAllowance(address owner) public view returns(Allowance memory allowance) {... */\n    tag_12:\n        /* \"contracts/StructAndMapping.sol\":659:685  Allowance memory allowance */\n      tag_18\n      tag_17\n      jump\t// in\n    tag_18:\n        /* \"contracts/StructAndMapping.sol\":704:714  allowances */\n      0x00\n        /* \"contracts/StructAndMapping.sol\":704:721  allowances[owner] */\n      dup1\n        /* \"contracts/StructAndMapping.sol\":715:720  owner */\n      dup4\n        /* \"contracts/StructAndMapping.sol\":704:721  allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StructAndMapping.sol\":697:721  return allowances[owner] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StructAndMapping.sol\":602:728  function getAllowance(address owner) public view returns(Allowance memory allowance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_17:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_21:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_23:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_24:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_39\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_23\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_25:\n        /* \"#utility.yul\":641:665   */\n      tag_41\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_24\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_42:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_26:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_44\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_25\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_27:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_28:\n        /* \"#utility.yul\":997:1021   */\n      tag_47\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_27\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_48:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_29:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_50\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_28\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_7:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_53\n      tag_21\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1290:1409   */\n    tag_52:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_54\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_26\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_55\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_29\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:2006   */\n    tag_11:\n        /* \"#utility.yul\":1736:1742   */\n      0x00\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1773:1782   */\n      dup3\n        /* \"#utility.yul\":1764:1771   */\n      dup5\n        /* \"#utility.yul\":1760:1783   */\n      sub\n        /* \"#utility.yul\":1756:1788   */\n      slt\n        /* \"#utility.yul\":1753:1872   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1791:1870   */\n      tag_58\n      tag_21\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1753:1872   */\n    tag_57:\n        /* \"#utility.yul\":1911:1912   */\n      0x00\n        /* \"#utility.yul\":1936:1989   */\n      tag_59\n        /* \"#utility.yul\":1981:1988   */\n      dup5\n        /* \"#utility.yul\":1972:1978   */\n      dup3\n        /* \"#utility.yul\":1961:1970   */\n      dup6\n        /* \"#utility.yul\":1957:1979   */\n      add\n        /* \"#utility.yul\":1936:1989   */\n      tag_26\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1926:1989   */\n      swap2\n      pop\n        /* \"#utility.yul\":1882:1999   */\n      pop\n        /* \"#utility.yul\":1677:2006   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2012:2120   */\n    tag_30:\n        /* \"#utility.yul\":2089:2113   */\n      tag_61\n        /* \"#utility.yul\":2107:2112   */\n      dup2\n        /* \"#utility.yul\":2089:2113   */\n      tag_24\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2084:2087   */\n      dup3\n        /* \"#utility.yul\":2077:2114   */\n      mstore\n        /* \"#utility.yul\":2012:2120   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2126:2234   */\n    tag_31:\n        /* \"#utility.yul\":2203:2227   */\n      tag_63\n        /* \"#utility.yul\":2221:2226   */\n      dup2\n        /* \"#utility.yul\":2203:2227   */\n      tag_27\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2198:2201   */\n      dup3\n        /* \"#utility.yul\":2191:2228   */\n      mstore\n        /* \"#utility.yul\":2126:2234   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2318:2828   */\n    tag_32:\n        /* \"#utility.yul\":2463:2467   */\n      0x40\n        /* \"#utility.yul\":2458:2461   */\n      dup3\n        /* \"#utility.yul\":2454:2468   */\n      add\n        /* \"#utility.yul\":2553:2557   */\n      0x00\n        /* \"#utility.yul\":2546:2551   */\n      dup3\n        /* \"#utility.yul\":2542:2558   */\n      add\n        /* \"#utility.yul\":2536:2559   */\n      mload\n        /* \"#utility.yul\":2572:2635   */\n      tag_65\n        /* \"#utility.yul\":2629:2633   */\n      0x00\n        /* \"#utility.yul\":2624:2627   */\n      dup6\n        /* \"#utility.yul\":2620:2634   */\n      add\n        /* \"#utility.yul\":2606:2618   */\n      dup3\n        /* \"#utility.yul\":2572:2635   */\n      tag_30\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2478:2645   */\n      pop\n        /* \"#utility.yul\":2729:2733   */\n      0x20\n        /* \"#utility.yul\":2722:2727   */\n      dup3\n        /* \"#utility.yul\":2718:2734   */\n      add\n        /* \"#utility.yul\":2712:2735   */\n      mload\n        /* \"#utility.yul\":2748:2811   */\n      tag_66\n        /* \"#utility.yul\":2805:2809   */\n      0x20\n        /* \"#utility.yul\":2800:2803   */\n      dup6\n        /* \"#utility.yul\":2796:2810   */\n      add\n        /* \"#utility.yul\":2782:2794   */\n      dup3\n        /* \"#utility.yul\":2748:2811   */\n      tag_31\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2655:2821   */\n      pop\n        /* \"#utility.yul\":2432:2828   */\n      pop\n        /* \"#utility.yul\":2318:2828   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2834:3152   */\n    tag_14:\n        /* \"#utility.yul\":2975:2979   */\n      0x00\n        /* \"#utility.yul\":3013:3015   */\n      0x40\n        /* \"#utility.yul\":3002:3011   */\n      dup3\n        /* \"#utility.yul\":2998:3016   */\n      add\n        /* \"#utility.yul\":2990:3016   */\n      swap1\n      pop\n        /* \"#utility.yul\":3026:3145   */\n      tag_68\n        /* \"#utility.yul\":3142:3143   */\n      0x00\n        /* \"#utility.yul\":3131:3140   */\n      dup4\n        /* \"#utility.yul\":3127:3144   */\n      add\n        /* \"#utility.yul\":3118:3124   */\n      dup5\n        /* \"#utility.yul\":3026:3145   */\n      tag_32\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2834:3152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202dd646a96f078adf57e4cc48aa921a657f23714ed3bda4a5c5c13b0af486ecaa64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526000341161001157600080fd5b6103f5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c441b9311461003b578063eb5a662e14610057575b600080fd5b610055600480360381019061005091906102ea565b610087565b005b610071600480360381019061006c919061032a565b610169565b60405161007e91906103a4565b60405180910390f35b61008f610221565b82816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081816020018181525050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050505050565b610171610221565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028182610256565b9050919050565b61029181610276565b811461029c57600080fd5b50565b6000813590506102ae81610288565b92915050565b6000819050919050565b6102c7816102b4565b81146102d257600080fd5b50565b6000813590506102e4816102be565b92915050565b6000806040838503121561030157610300610251565b5b600061030f8582860161029f565b9250506020610320858286016102d5565b9150509250929050565b6000602082840312156103405761033f610251565b5b600061034e8482850161029f565b91505092915050565b61036081610276565b82525050565b61036f816102b4565b82525050565b60408201600082015161038b6000850182610357565b50602082015161039e6020850182610366565b50505050565b60006040820190506103b96000830184610375565b9291505056fea26469706673582212202dd646a96f078adf57e4cc48aa921a657f23714ed3bda4a5c5c13b0af486ecaa64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 CALLVALUE GT PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC441B931 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEB5A662E EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F PUSH2 0x221 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x171 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281 DUP3 PUSH2 0x256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x291 DUP2 PUSH2 0x276 JUMP JUMPDEST DUP2 EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AE DUP2 PUSH2 0x288 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C7 DUP2 PUSH2 0x2B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E4 DUP2 PUSH2 0x2BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH2 0x300 PUSH2 0x251 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30F DUP6 DUP3 DUP7 ADD PUSH2 0x29F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x320 DUP6 DUP3 DUP7 ADD PUSH2 0x2D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x340 JUMPI PUSH2 0x33F PUSH2 0x251 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34E DUP5 DUP3 DUP6 ADD PUSH2 0x29F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x360 DUP2 PUSH2 0x276 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x2B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x38B PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x357 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x39E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x366 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xD6 CHAINID 0xA9 PUSH16 0x78ADF57E4CC48AA921A657F23714ED3 0xBD LOG4 0xA5 0xC5 0xC1 EXTCODESIZE EXP DELEGATECALL DUP7 0xEC 0xAA PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "126:606:0:-:0;;;345:1;333:9;:13;325:22;;;;;;126:606;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getAllowance_67": {
									"entryPoint": 361,
									"id": 67,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setAllowanceWithAddress_54": {
									"entryPoint": 135,
									"id": 54,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_Allowance_$7_memory_ptr_to_t_struct$_Allowance_$7_memory_ptr_fromStack": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_struct$_Allowance_$7_memory_ptr__to_t_struct$_Allowance_$7_memory_ptr__fromStack_reversed": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3155:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:1",
														"type": ""
													}
												],
												"src": "841:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:1"
															},
															"nodeType": "YulIf",
															"src": "977:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:1",
														"type": ""
													}
												],
												"src": "924:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:1",
														"type": ""
													}
												],
												"src": "1052:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:1"
															},
															"nodeType": "YulIf",
															"src": "1290:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:1",
														"type": ""
													}
												],
												"src": "1197:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1743:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1789:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1791:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1791:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1791:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1764:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1773:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1760:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:32:1"
															},
															"nodeType": "YulIf",
															"src": "1753:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1882:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1897:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1911:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1901:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1926:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1961:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1972:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1957:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1957:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1981:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1936:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1936:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1926:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1713:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1724:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1736:6:1",
														"type": ""
													}
												],
												"src": "1677:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2067:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2084:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2107:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2089:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2089:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2077:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2077:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2062:3:1",
														"type": ""
													}
												],
												"src": "2012:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2181:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2198:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2221:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2203:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2203:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2191:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2169:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2176:3:1",
														"type": ""
													}
												],
												"src": "2126:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2432:396:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2442:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2458:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2463:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2454:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:14:1"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "2446:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2478:167:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2516:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2546:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2553:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2542:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2542:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2536:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2536:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2520:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2606:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2624:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2629:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2620:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2620:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2572:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2572:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2572:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2655:166:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2692:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2722:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2729:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2718:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2718:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2712:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2696:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2782:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2800:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2805:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2796:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2796:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2748:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2748:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2748:63:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Allowance_$7_memory_ptr_to_t_struct$_Allowance_$7_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2419:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2426:3:1",
														"type": ""
													}
												],
												"src": "2318:510:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2980:172:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2990:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3002:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3013:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2998:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2998:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2990:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3118:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3131:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3142:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3127:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3127:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Allowance_$7_memory_ptr_to_t_struct$_Allowance_$7_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3026:91:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3026:119:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3026:119:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Allowance_$7_memory_ptr__to_t_struct$_Allowance_$7_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2952:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2964:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2975:4:1",
														"type": ""
													}
												],
												"src": "2834:318:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct StructAndMapping.Allowance -> struct StructAndMapping.Allowance\n    function abi_encode_t_struct$_Allowance_$7_memory_ptr_to_t_struct$_Allowance_$7_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // spender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Allowance_$7_memory_ptr__to_t_struct$_Allowance_$7_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Allowance_$7_memory_ptr_to_t_struct$_Allowance_$7_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063c441b9311461003b578063eb5a662e14610057575b600080fd5b610055600480360381019061005091906102ea565b610087565b005b610071600480360381019061006c919061032a565b610169565b60405161007e91906103a4565b60405180910390f35b61008f610221565b82816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081816020018181525050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050505050565b610171610221565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028182610256565b9050919050565b61029181610276565b811461029c57600080fd5b50565b6000813590506102ae81610288565b92915050565b6000819050919050565b6102c7816102b4565b81146102d257600080fd5b50565b6000813590506102e4816102be565b92915050565b6000806040838503121561030157610300610251565b5b600061030f8582860161029f565b9250506020610320858286016102d5565b9150509250929050565b6000602082840312156103405761033f610251565b5b600061034e8482850161029f565b91505092915050565b61036081610276565b82525050565b61036f816102b4565b82525050565b60408201600082015161038b6000850182610357565b50602082015161039e6020850182610366565b50505050565b60006040820190506103b96000830184610375565b9291505056fea26469706673582212202dd646a96f078adf57e4cc48aa921a657f23714ed3bda4a5c5c13b0af486ecaa64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC441B931 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEB5A662E EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F PUSH2 0x221 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x171 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281 DUP3 PUSH2 0x256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x291 DUP2 PUSH2 0x276 JUMP JUMPDEST DUP2 EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AE DUP2 PUSH2 0x288 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C7 DUP2 PUSH2 0x2B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E4 DUP2 PUSH2 0x2BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH2 0x300 PUSH2 0x251 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30F DUP6 DUP3 DUP7 ADD PUSH2 0x29F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x320 DUP6 DUP3 DUP7 ADD PUSH2 0x2D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x340 JUMPI PUSH2 0x33F PUSH2 0x251 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34E DUP5 DUP3 DUP6 ADD PUSH2 0x29F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x360 DUP2 PUSH2 0x276 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x2B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x38B PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x357 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x39E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x366 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xD6 CHAINID 0xA9 PUSH16 0x78ADF57E4CC48AA921A657F23714ED3 0xBD LOG4 0xA5 0xC5 0xC1 EXTCODESIZE EXP DELEGATECALL DUP7 0xEC 0xAA PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "126:606:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;360:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;602:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;360:236;445:26;;:::i;:::-;501:8;481:9;:17;;:28;;;;;;;;;;;538:7;519:9;:16;;:26;;;;;580:9;555:10;:22;566:10;555:22;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;435:161;360:236;;:::o;602:126::-;659:26;;:::i;:::-;704:10;:17;715:5;704:17;;;;;;;;;;;;;;;697:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:126;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:329::-;1736:6;1785:2;1773:9;1764:7;1760:23;1756:32;1753:119;;;1791:79;;:::i;:::-;1753:119;1911:1;1936:53;1981:7;1972:6;1961:9;1957:22;1936:53;:::i;:::-;1926:63;;1882:117;1677:329;;;;:::o;2012:108::-;2089:24;2107:5;2089:24;:::i;:::-;2084:3;2077:37;2012:108;;:::o;2126:::-;2203:24;2221:5;2203:24;:::i;:::-;2198:3;2191:37;2126:108;;:::o;2318:510::-;2463:4;2458:3;2454:14;2553:4;2546:5;2542:16;2536:23;2572:63;2629:4;2624:3;2620:14;2606:12;2572:63;:::i;:::-;2478:167;2729:4;2722:5;2718:16;2712:23;2748:63;2805:4;2800:3;2796:14;2782:12;2748:63;:::i;:::-;2655:166;2432:396;2318:510;;:::o;2834:318::-;2975:4;3013:2;3002:9;2998:18;2990:26;;3026:119;3142:1;3131:9;3127:17;3118:6;3026:119;:::i;:::-;2834:318;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "202600",
								"executionCost": "243",
								"totalCost": "202843"
							},
							"external": {
								"getAllowance(address)": "infinite",
								"setAllowanceWithAddress(address,uint256)": "47273"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 732,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 126,
									"end": 732,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 126,
									"end": 732,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 345,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 333,
									"end": 342,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 333,
									"end": 346,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 325,
									"end": 347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 325,
									"end": 347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 325,
									"end": 347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 347,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 325,
									"end": 347,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 325,
									"end": 347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 126,
									"end": 732,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 732,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 732,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 732,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 732,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 126,
									"end": 732,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 732,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202dd646a96f078adf57e4cc48aa921a657f23714ed3bda4a5c5c13b0af486ecaa64736f6c63430008120033",
									".code": [
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "C441B931"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "EB5A662E"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 732,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 360,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 360,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 360,
											"end": 596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 360,
											"end": 596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 360,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 360,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 360,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 360,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 602,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 602,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 602,
											"end": 728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 602,
											"end": 728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 602,
											"end": 728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 602,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 602,
											"end": 728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 602,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 602,
											"end": 728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 602,
											"end": 728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 602,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 360,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 445,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 471,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 445,
											"end": 471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 501,
											"end": 509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 481,
											"end": 490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 481,
											"end": 509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 481,
											"end": 509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 481,
											"end": 509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 481,
											"end": 509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 481,
											"end": 509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 519,
											"end": 528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 519,
											"end": 535,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 519,
											"end": 535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 519,
											"end": 545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 519,
											"end": 545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 519,
											"end": 545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 519,
											"end": 545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 519,
											"end": 545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 576,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 555,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 555,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 555,
											"end": 577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 577,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 555,
											"end": 589,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 589,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 602,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 659,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 659,
											"end": 685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 685,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 659,
											"end": 685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 704,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 721,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 697,
											"end": 721,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 697,
											"end": 721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 697,
											"end": 721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1783,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1791,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1981,
											"end": 1988,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1936,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2120,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2012,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2107,
											"end": 2112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2089,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2113,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2089,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2234,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2126,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2203,
											"end": 2227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2203,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2828,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2318,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2454,
											"end": 2468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 2551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2559,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2629,
											"end": 2633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2627,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2572,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2635,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2572,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2805,
											"end": 2809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2748,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2811,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2748,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 3152,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2834,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3142,
											"end": 3143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3124,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3026,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3145,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3026,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 3152,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 3152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 3152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 3152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 3152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/StructAndMapping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getAllowance(address)": "eb5a662e",
							"setAllowanceWithAddress(address,uint256)": "c441b931"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getAllowance\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct StructAndMapping.Allowance\",\"name\":\"allowance\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setAllowanceWithAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0xVeliUysal\",\"details\":\"Array Example\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StructAndMapping.sol\":\"StructAndMapping\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StructAndMapping.sol\":{\"keccak256\":\"0x3e95fbd2b91f31dd2f01f1a639363f451e34493300409b16bbce5160a92ad28f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7f3ed30d270228811af500d270bf55cd9d57497679cda2fe361b99b6d76241a4\",\"dweb:/ipfs/QmW8tWUs1WxX69448ewhpxczBNagyvA9EwSCWhL6jAG544\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 12,
								"contract": "contracts/StructAndMapping.sol:StructAndMapping",
								"label": "allowances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Allowance)7_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Allowance)7_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StructAndMapping.Allowance)",
								"numberOfBytes": "32",
								"value": "t_struct(Allowance)7_storage"
							},
							"t_struct(Allowance)7_storage": {
								"encoding": "inplace",
								"label": "struct StructAndMapping.Allowance",
								"members": [
									{
										"astId": 4,
										"contract": "contracts/StructAndMapping.sol:StructAndMapping",
										"label": "spender",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 6,
										"contract": "contracts/StructAndMapping.sol:StructAndMapping",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/StructAndMapping.sol": {
				"ast": {
					"absolutePath": "contracts/StructAndMapping.sol",
					"exportedSymbols": {
						"StructAndMapping": [
							68
						]
					},
					"id": 69,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StructAndMapping",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "73:52:0",
								"text": " @author 0xVeliUysal\n @dev Array Example"
							},
							"fullyImplemented": true,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "StructAndMapping",
							"nameLocation": "135:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StructAndMapping.Allowance",
									"id": 7,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "194:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 7,
											"src": "186:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "186:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "219:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 7,
											"src": "211:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "211:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Allowance",
									"nameLocation": "166:9:0",
									"nodeType": "StructDefinition",
									"scope": 68,
									"src": "159:73:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "allowances",
									"nameLocation": "276:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 68,
									"src": "238:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allowance_$7_storage_$",
										"typeString": "mapping(address => struct StructAndMapping.Allowance)"
									},
									"typeName": {
										"id": 11,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 8,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "246:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "238:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allowance_$7_storage_$",
											"typeString": "mapping(address => struct StructAndMapping.Allowance)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 10,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 9,
												"name": "Allowance",
												"nameLocations": [
													"257:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 7,
												"src": "257:9:0"
											},
											"referencedDeclaration": 7,
											"src": "257:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Allowance_$7_storage_ptr",
												"typeString": "struct StructAndMapping.Allowance"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "315:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 16,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "333:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "337:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "333:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "345:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "333:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 15,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "325:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "325:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "325:22:0"
											}
										]
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:0:0"
									},
									"scope": 68,
									"src": "293:61:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "435:161:0",
										"statements": [
											{
												"assignments": [
													32
												],
												"declarations": [
													{
														"constant": false,
														"id": 32,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "462:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 53,
														"src": "445:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Allowance_$7_memory_ptr",
															"typeString": "struct StructAndMapping.Allowance"
														},
														"typeName": {
															"id": 31,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 30,
																"name": "Allowance",
																"nameLocations": [
																	"445:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 7,
																"src": "445:9:0"
															},
															"referencedDeclaration": 7,
															"src": "445:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$7_storage_ptr",
																"typeString": "struct StructAndMapping.Allowance"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 33,
												"nodeType": "VariableDeclarationStatement",
												"src": "445:26:0"
											},
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 34,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "481:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$7_memory_ptr",
																"typeString": "struct StructAndMapping.Allowance memory"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "491:7:0",
														"memberName": "spender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "481:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 37,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "501:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "481:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "481:28:0"
											},
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 40,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "519:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Allowance_$7_memory_ptr",
																"typeString": "struct StructAndMapping.Allowance memory"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "529:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "519:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 43,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "538:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "519:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "519:26:0"
											},
											{
												"expression": {
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 46,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "555:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allowance_$7_storage_$",
																"typeString": "mapping(address => struct StructAndMapping.Allowance storage ref)"
															}
														},
														"id": 49,
														"indexExpression": {
															"expression": {
																"id": 47,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "566:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "570:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "566:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "555:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Allowance_$7_storage",
															"typeString": "struct StructAndMapping.Allowance storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 50,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "580:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Allowance_$7_memory_ptr",
															"typeString": "struct StructAndMapping.Allowance memory"
														}
													},
													"src": "555:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$7_storage",
														"typeString": "struct StructAndMapping.Allowance storage ref"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "555:34:0"
											}
										]
									},
									"functionSelector": "c441b931",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAllowanceWithAddress",
									"nameLocation": "369:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "401:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "393:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "419:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "411:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:35:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:0:0"
									},
									"scope": 68,
									"src": "360:236:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "687:41:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 62,
														"name": "allowances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "704:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allowance_$7_storage_$",
															"typeString": "mapping(address => struct StructAndMapping.Allowance storage ref)"
														}
													},
													"id": 64,
													"indexExpression": {
														"id": 63,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "715:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "704:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$7_storage",
														"typeString": "struct StructAndMapping.Allowance storage ref"
													}
												},
												"functionReturnParameters": 61,
												"id": 65,
												"nodeType": "Return",
												"src": "697:24:0"
											}
										]
									},
									"functionSelector": "eb5a662e",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllowance",
									"nameLocation": "611:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "632:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "624:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:15:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "676:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "659:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Allowance_$7_memory_ptr",
													"typeString": "struct StructAndMapping.Allowance"
												},
												"typeName": {
													"id": 59,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 58,
														"name": "Allowance",
														"nameLocations": [
															"659:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "659:9:0"
													},
													"referencedDeclaration": 7,
													"src": "659:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Allowance_$7_storage_ptr",
														"typeString": "struct StructAndMapping.Allowance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:28:0"
									},
									"scope": 68,
									"src": "602:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 69,
							"src": "126:606:0",
							"usedErrors": []
						}
					],
					"src": "40:692:0"
				},
				"id": 0
			}
		}
	}
}